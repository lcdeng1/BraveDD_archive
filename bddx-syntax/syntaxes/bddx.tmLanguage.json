{
    "scopeName": "source.bddx",
    "name": "BDDX",
    "fileTypes": ["bddx"],
    "patterns": [
      {
        "name": "comment.line.double-slash.bddx",
        "begin": "//",
        "end": "$"
      },
      {
        "name": "comment.block.bddx",
        "begin": "/\\*",
        "end": "\\*/"
      },
      {
        "name": "keyword.control.bddx",
        "match": "\\b(TYPE|LVLS|RANGE|NNUM|RNUM)\\b"
      },
      {
        "name": "variable.other.bddx",
        "match": "\\b[a-zA-Z]+(BDD|bdd|MXD|mxd)\\b"
      },
      {
        "name": "entity.name.function.bddx",
        "match": "\\b(node|root)\\b"
      },
      {
        "name": "constant.numeric.bddx",
        "match": "\\b\\d+\\b"
      },
      {
        "name": "keyword.operator.custom",
        "match": "\\b(0|1)(?=:<)"
      },
      {
        "name": "variable.parameter.bddx",
        "match": "\\bT[0-9]+\\b"
      },
      {
        "name": "constant.character.escape.bddx",
        "match": "\\bL\\b"
      },
      {
        "name": "support.type.bddx",
        "match": "(EL0|EL1|EH0|EH1|AL0|AL1|AH0|AH1|X|I)"
      },
      {
        "name": "storage.type.range.bddx",
        "match": "\\b(BOOL|INT|REAL)\\b"
      },
      {
        "name": "string.quoted.double.cpp",
        "begin": "\"",
        "end": "\"",
        "patterns": [
          {
            "name": "constant.character.escape.cpp",
            "match": "\\\\."
          }
        ]
      }
    ],
    "repository": {}
  }
  